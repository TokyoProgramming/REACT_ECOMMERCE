{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS, CART_ADD_TO_ITEM, CART_ADD_TO_ITEM_FAIL, GET_USER_CART, GET_USER_CART_REQUEST, GET_USER_CART_ERROR, CART_UPDATE_ITEM, CART_UPDATE_REQUEST } from '../constants/cartConstants';\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\nexport const addToCartItem = (id, qty) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'CART_ADD_TO_ITEM_REQUEST'\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const orderItems = [{\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      qty\n    }];\n    const cartItems = {\n      user: userInfo._id,\n      orderItems\n    };\n    await axios.post('/api/cart', cartItems, config);\n    dispatch({\n      type: CART_ADD_TO_ITEM\n    });\n    dispatch({\n      type: 'CART_ADD_TO_ITEM_SUCCESS'\n    });\n  } catch (error) {\n    dispatch({\n      type: CART_ADD_TO_ITEM_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserCart = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_USER_CART_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/cart`, config);\n    dispatch({\n      type: GET_USER_CART,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_USER_CART_ERROR,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserCart = (productId, qty) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CART_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const info = {\n      productId,\n      qty\n    };\n    const {\n      data\n    } = await axios.put(`/api/cart/${productId}`, config, info);\n    dispatch({\n      type: CART_UPDATE_ITEM,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_USER_CART_ERROR,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/m19ss/Desktop/webDev/REACT/MERN_E_COMMERCE/frontend/src/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_SHIPPING_ADDRESS","CART_ADD_TO_ITEM","CART_ADD_TO_ITEM_FAIL","GET_USER_CART","GET_USER_CART_REQUEST","GET_USER_CART_ERROR","CART_UPDATE_ITEM","CART_UPDATE_REQUEST","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod","addToCartItem","userLogin","userInfo","config","headers","Authorization","token","orderItems","user","post","error","response","message","getUserCart","updateUserCart","productId","info","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,wBAHF,EAIEC,0BAJF,EAKEC,gBALF,EAMEC,qBANF,EAOEC,aAPF,EAQEC,qBARF,EASEC,mBATF,EAUEC,gBAVF,EAWEC,mBAXF,QAYO,4BAZP;AAcA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMjB,KAAK,CAACkB,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAAvB;AAEAE,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAElB,aADC;AAEPmB,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAEJ,IAAI,CAACK,GADP;AAEPC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAFJ;AAGPC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAHL;AAIPC,MAAAA,KAAK,EAAER,IAAI,CAACQ,KAJL;AAKPC,MAAAA,YAAY,EAAET,IAAI,CAACS,YALZ;AAMPZ,MAAAA;AANO;AAFF,GAAD,CAAR;AAYAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAIpB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEjB,gBADC;AAEPkB,IAAAA,OAAO,EAAEP;AAFF,GAAD,CAAR;AAKAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CAPM;AASP,OAAO,MAAME,mBAAmB,GAAIjB,IAAD,IAAWF,QAAD,IAAc;AACzDA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEf,0BADC;AAEPgB,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR;AAKAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAxC;AACD,CAPM;AASP,OAAO,MAAMkB,iBAAiB,GAAIlB,IAAD,IAAWF,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEhB,wBADC;AAEPiB,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR;AAKAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAtC;AACD,CAPM;AASP,OAAO,MAAMmB,aAAa,GAAG,CAACvB,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIA,UAAM;AACJkB,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFtB,QAAQ,EAFZ;AAIA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMjB,KAAK,CAACkB,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAAvB;AAEA,UAAM0B,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAOA,UAAMC,UAAU,GAAG,CACjB;AACEtB,MAAAA,OAAO,EAAEJ,IAAI,CAACK,GADhB;AAEEC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAFb;AAGEC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAHd;AAIEC,MAAAA,KAAK,EAAER,IAAI,CAACQ,KAJd;AAKEX,MAAAA;AALF,KADiB,CAAnB;AAUA,UAAMkB,SAAS,GAAG;AAChBY,MAAAA,IAAI,EAAEN,QAAQ,CAAChB,GADC;AAEhBqB,MAAAA;AAFgB,KAAlB;AAKA,UAAM3C,KAAK,CAAC6C,IAAN,CAAW,WAAX,EAAwBb,SAAxB,EAAmCO,MAAnC,CAAN;AAEAxB,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAIAU,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GA1CD,CA0CE,OAAO2B,KAAP,EAAc;AACd/B,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEb,qBADC;AAEPc,MAAAA,OAAO,EACL0B,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAe9B,IAAf,CAAoB+B,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAe9B,IAAf,CAAoB+B,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CApDM;AAsDP,OAAO,MAAMC,WAAW,GAAG,MAAM,OAAOlC,QAAP,EAAiBC,QAAjB,KAA8B;AAC7D,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACA,UAAM;AACJ6B,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFtB,QAAQ,EAFZ;AAIA,UAAMuB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAOA,UAAM;AAAEzB,MAAAA;AAAF,QAAW,MAAMjB,KAAK,CAACkB,GAAN,CAAW,WAAX,EAAuBqB,MAAvB,CAAvB;AAEAxB,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEZ,aADC;AAEPa,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAnBD,CAmBE,OAAO6B,KAAP,EAAc;AACd/B,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEV,mBADC;AAEPW,MAAAA,OAAO,EACL0B,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAe9B,IAAf,CAAoB+B,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAe9B,IAAf,CAAoB+B,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA7BM;AA+BP,OAAO,MAAME,cAAc,GACzB,CAACC,SAAD,EAAYrC,GAAZ,KAAoB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChD,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAIA,UAAM;AACJ0B,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFtB,QAAQ,EAFZ;AAIA,UAAMuB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAOA,UAAMU,IAAI,GAAG;AACXD,MAAAA,SADW;AAEXrC,MAAAA;AAFW,KAAb;AAKA,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMjB,KAAK,CAACqD,GAAN,CAAW,aAAYF,SAAU,EAAjC,EAAoCZ,MAApC,EAA4Ca,IAA5C,CAAvB;AAEArC,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,gBADC;AAEPU,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GA3BD,CA2BE,OAAO6B,KAAP,EAAc;AACd/B,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEV,mBADC;AAEPW,MAAAA,OAAO,EACL0B,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAe9B,IAAf,CAAoB+B,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAe9B,IAAf,CAAoB+B,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAtCI","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_ADD_TO_ITEM,\r\n  CART_ADD_TO_ITEM_FAIL,\r\n  GET_USER_CART,\r\n  GET_USER_CART_REQUEST,\r\n  GET_USER_CART_ERROR,\r\n  CART_UPDATE_ITEM,\r\n  CART_UPDATE_REQUEST,\r\n} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n\r\nexport const addToCartItem = (id, qty) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: 'CART_ADD_TO_ITEM_REQUEST',\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const orderItems = [\r\n      {\r\n        product: data._id,\r\n        name: data.name,\r\n        image: data.image,\r\n        price: data.price,\r\n        qty,\r\n      },\r\n    ];\r\n\r\n    const cartItems = {\r\n      user: userInfo._id,\r\n      orderItems,\r\n    };\r\n\r\n    await axios.post('/api/cart', cartItems, config);\r\n\r\n    dispatch({\r\n      type: CART_ADD_TO_ITEM,\r\n    });\r\n\r\n    dispatch({\r\n      type: 'CART_ADD_TO_ITEM_SUCCESS',\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CART_ADD_TO_ITEM_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserCart = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_USER_CART_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/cart`, config);\r\n\r\n    dispatch({\r\n      type: GET_USER_CART,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_USER_CART_ERROR,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserCart =\r\n  (productId, qty) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: CART_UPDATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const info = {\r\n        productId,\r\n        qty,\r\n      };\r\n\r\n      const { data } = await axios.put(`/api/cart/${productId}`, config, info);\r\n\r\n      dispatch({\r\n        type: CART_UPDATE_ITEM,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_USER_CART_ERROR,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}