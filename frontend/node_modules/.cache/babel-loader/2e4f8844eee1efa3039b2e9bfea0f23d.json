{"ast":null,"code":"import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_LOGOUT, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SEND_TOKEN_FAIL, USER_SEND_TOKEN_REQUEST, USER_SEND_TOKEN_SUCCESS, USER_UPDATE_ADMIN_FAIL, USER_UPDATE_ADMIN_REQUEST, USER_UPDATE_ADMIN_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_VERIFY_TOKEN_FAIL, USER_VERIFY_TOKEN_REQUEST, USER_VERIFY_TOKEN_SUCCESS } from '../constants/userConstants';\nimport axios from 'axios';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    const verify = data.isVerify;\n\n    if (!verify) {\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } else {\n      dispatch({\n        type: USER_LOGIN_FAIL\n      });\n    }\n  } catch (error) {\n    if (error.message = 'Complete 2FA Auth') {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    } else {}\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  localStorage.removeItem('__paypal_storage__');\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n  dispatch({\n    type: USER_LOGIN_LOGOUT\n  });\n  document.location.href = '/login';\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    }); // localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const generateToken = email => async dispatch => {\n  try {\n    dispatch({\n      type: USER_SEND_TOKEN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    await axios.post('/api/users/generate', {\n      email\n    }, config);\n    dispatch({\n      type: USER_SEND_TOKEN_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_SEND_TOKEN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const verifyToken = (user, token) => async dispatch => {\n  const email = user.email;\n  const id = user._id;\n\n  try {\n    dispatch({\n      type: USER_VERIFY_TOKEN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/${id}/verify`, {\n      email,\n      token\n    }, config);\n    dispatch({\n      type: USER_VERIFY_TOKEN_SUCCESS\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: user\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_VERIFY_TOKEN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/users/profile', user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/users/', config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_ADMIN_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const data = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_ADMIN_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_ADMIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/m19ss/Desktop/webDev/REACT/MERN_E_COMMERCE/frontend/src/actions/userActions.js"],"names":["USER_DELETE_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_RESET","USER_LIST_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_LOGOUT","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SEND_TOKEN_FAIL","USER_SEND_TOKEN_REQUEST","USER_SEND_TOKEN_SUCCESS","USER_UPDATE_ADMIN_FAIL","USER_UPDATE_ADMIN_REQUEST","USER_UPDATE_ADMIN_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_VERIFY_TOKEN_FAIL","USER_VERIFY_TOKEN_REQUEST","USER_VERIFY_TOKEN_SUCCESS","axios","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","verify","isVerify","payload","localStorage","setItem","JSON","stringify","error","message","response","logout","removeItem","document","location","href","register","name","generateToken","verifyToken","user","token","id","_id","getUserDetails","getState","userLogin","userInfo","Authorization","get","updateUserProfile","put","listUsers","deleteUser","delete","updateUser"],"mappings":"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","sourcesContent":["import {\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_LOGOUT,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_SEND_TOKEN_FAIL,\r\n  USER_SEND_TOKEN_REQUEST,\r\n  USER_SEND_TOKEN_SUCCESS,\r\n  USER_UPDATE_ADMIN_FAIL,\r\n  USER_UPDATE_ADMIN_REQUEST,\r\n  USER_UPDATE_ADMIN_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_VERIFY_TOKEN_FAIL,\r\n  USER_VERIFY_TOKEN_REQUEST,\r\n  USER_VERIFY_TOKEN_SUCCESS,\r\n} from '../constants/userConstants';\r\nimport axios from 'axios';\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n    const verify = data.isVerify;\r\n    if (!verify) {\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } else {\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    if ((error.message = 'Complete 2FA Auth')) {\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    } else {\r\n    }\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  localStorage.removeItem('cartItems');\r\n  localStorage.removeItem('shippingAddress');\r\n  localStorage.removeItem('paymentMethod');\r\n  localStorage.removeItem('__paypal_storage__');\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  dispatch({ type: USER_LOGIN_LOGOUT });\r\n  document.location.href = '/login';\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const generateToken = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_SEND_TOKEN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    await axios.post('/api/users/generate', { email }, config);\r\n\r\n    dispatch({\r\n      type: USER_SEND_TOKEN_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SEND_TOKEN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const verifyToken = (user, token) => async (dispatch) => {\r\n  const email = user.email;\r\n  const id = user._id;\r\n  try {\r\n    dispatch({\r\n      type: USER_VERIFY_TOKEN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/users/${id}/verify`,\r\n      { email, token },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_VERIFY_TOKEN_SUCCESS,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: user,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_VERIFY_TOKEN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put('/api/users/profile', user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get('/api/users/', config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_ADMIN_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const data = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_ADMIN_SUCCESS,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_ADMIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}