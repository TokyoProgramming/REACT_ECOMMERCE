{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m19ss\\\\Desktop\\\\webDev\\\\REACT\\\\MERN_E_COMMERCE\\\\frontend\\\\src\\\\screens\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { login } from '../actions/userActions';\nimport { getUserCart } from '../actions/cartActions';\nimport { generateToken } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    userInfo,\n    error\n  } = userLogin;\n  const userSendToken = useSelector(state => state.userSendToken);\n  const {\n    loading: sentTokenLoading,\n    sendTokenUser,\n    error: sentTokenError\n  } = userSendToken;\n  useEffect(() => {\n    if (userInfo) {\n      dispatch(getUserCart());\n      history.push(redirect);\n    } else if (error) {\n      const userEmail = error.split(' ')[0];\n\n      if (email === userEmail) {\n        dispatch(generateToken(email)); // eslint-disable-next-line\n      }\n    }\n  }, [history, userInfo, redirect, dispatch, error]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading || sentTokenLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : !sendTokenUser ? /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), sentTokenError && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [sentTokenError, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            required: true,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"password\",\n            value: password,\n            required: true,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"New Customer ?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: redirect ? `/register?redirect=${redirect}` : '/register',\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : history.push(`token/${sendTokenUser._id}/verify`)\n  }, void 0, false);\n};\n\n_s(LoginScreen, \"AA/shRfZPlLa3niBU3hJq/g+yJ4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/m19ss/Desktop/webDev/REACT/MERN_E_COMMERCE/frontend/src/screens/LoginScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","FormContainer","login","getUserCart","generateToken","LoginScreen","location","history","email","setEmail","password","setPassword","redirect","search","split","dispatch","userLogin","state","loading","userInfo","error","userSendToken","sentTokenLoading","sendTokenUser","sentTokenError","push","userEmail","submitHandler","e","preventDefault","target","value","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions';\r\nimport { getUserCart } from '../actions/cartActions';\r\nimport { generateToken } from '../actions/userActions';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, userInfo, error } = userLogin;\r\n\r\n  const userSendToken = useSelector((state) => state.userSendToken);\r\n  const {\r\n    loading: sentTokenLoading,\r\n    sendTokenUser,\r\n    error: sentTokenError,\r\n  } = userSendToken;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(getUserCart());\r\n\r\n      history.push(redirect);\r\n    } else if (error) {\r\n      const userEmail = error.split(' ')[0];\r\n\r\n      if (email === userEmail) {\r\n        dispatch(generateToken(email));\r\n        // eslint-disable-next-line\r\n      }\r\n    }\r\n  }, [history, userInfo, redirect, dispatch, error]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading || sentTokenLoading ? (\r\n        <Loader />\r\n      ) : !sendTokenUser ? (\r\n        <FormContainer>\r\n          <h1>Sign In</h1>\r\n\r\n          {error && <Message variant=\"danger\">{error} </Message>}\r\n          {sentTokenError && (\r\n            <Message variant=\"danger\">{sentTokenError} </Message>\r\n          )}\r\n\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                required\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                value={password}\r\n                required\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Sign In\r\n            </Button>\r\n          </Form>\r\n          <Row className=\"py-3\">\r\n            <Col>\r\n              New Customer ?{' '}\r\n              <Link\r\n                to={redirect ? `/register?redirect=${redirect}` : '/register'}\r\n              >\r\n                Register\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </FormContainer>\r\n      ) : (\r\n        history.push(`token/${sendTokenUser._id}/verify`)\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}