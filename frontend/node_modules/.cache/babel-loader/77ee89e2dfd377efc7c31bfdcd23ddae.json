{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS, CART_ADD_TO_ITEM, CART_ADD_TO_ITEM_FAIL, GET_USER_CART, GET_USER_CART_REQUEST, GET_USER_CART_ERROR } from '../constants/cartConstants';\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\nexport const addToCartItem = (id, qty) => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const orderItems = [{\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      qty\n    }];\n    const cartItems = {\n      user: userInfo._id,\n      orderItems\n    };\n    const {\n      data: cartResult\n    } = await axios.post('/api/cart', cartItems, config);\n    dispatch({\n      type: CART_ADD_TO_ITEM,\n      payload: cartResult\n    });\n  } catch (error) {\n    dispatch({\n      type: CART_ADD_TO_ITEM_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserCart = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_USER_CART_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/cart`, config);\n    dispatch({\n      type: GET_USER_CART,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_USER_CART_ERROR,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/m19ss/Desktop/webDev/REACT/MERN_E_COMMERCE/frontend/src/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_SHIPPING_ADDRESS","CART_ADD_TO_ITEM","CART_ADD_TO_ITEM_FAIL","GET_USER_CART","GET_USER_CART_REQUEST","GET_USER_CART_ERROR","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod","addToCartItem","userLogin","userInfo","config","headers","Authorization","token","orderItems","user","cartResult","post","error","response","message","getUserCart"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_ADD_TO_ITEM,\r\n  CART_ADD_TO_ITEM_FAIL,\r\n  GET_USER_CART,\r\n  GET_USER_CART_REQUEST,\r\n  GET_USER_CART_ERROR,\r\n} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n\r\nexport const addToCartItem = (id, qty) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const orderItems = [\r\n      {\r\n        product: data._id,\r\n        name: data.name,\r\n        image: data.image,\r\n        price: data.price,\r\n        qty,\r\n      },\r\n    ];\r\n\r\n    const cartItems = {\r\n      user: userInfo._id,\r\n      orderItems,\r\n    };\r\n\r\n    const { data: cartResult } = await axios.post(\r\n      '/api/cart',\r\n      cartItems,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: CART_ADD_TO_ITEM,\r\n      payload: cartResult,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CART_ADD_TO_ITEM_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserCart = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_USER_CART_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/cart`, config);\r\n\r\n    dispatch({\r\n      type: GET_USER_CART,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_USER_CART_ERROR,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}