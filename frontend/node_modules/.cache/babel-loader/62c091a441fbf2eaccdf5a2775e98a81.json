{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m19ss\\\\Desktop\\\\webDev\\\\REACT\\\\MERN_E_COMMERCE\\\\frontend\\\\src\\\\stripe\\\\CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { payOrderStripe } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckoutForm = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n      console.log(paymentMethod.id);\n      const id = paymentMethod.id;\n      const amount = paymentMethod.amount;\n      dispatch(payOrderStripe(id, amount));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {\n      options: {\n        style: {\n          base: {\n            fontSize: '16px',\n            color: '#424770',\n            '::placeholder': {\n              color: '#aab7c4'\n            }\n          },\n          invalid: {\n            color: '#9e2146'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["C:/Users/m19ss/Desktop/webDev/REACT/MERN_E_COMMERCE/frontend/src/stripe/CheckoutForm.js"],"names":["CardElement","useStripe","useElements","payOrderStripe","CheckoutForm","stripe","elements","handleSubmit","e","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","id","amount","dispatch","style","base","fontSize","color","invalid"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,SAASC,cAAT,QAA+B,yBAA/B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,QAAQ,GAAGJ,WAAW,EAA5B;;AAEA,QAAMK,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI,CAACJ,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACD;;AAED,UAAMI,WAAW,GAAGJ,QAAQ,CAACK,UAAT,CAAoBX,WAApB,CAApB,CAPgC,CAShC;;AACA,UAAM;AAAEY,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2B,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAEN;AAF0D,KAA3B,CAAvC;;AAKA,QAAIE,KAAJ,EAAW;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACD,KAFD,MAEO;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,aAA/B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,aAAa,CAACM,EAA1B;AACA,YAAMA,EAAE,GAAGN,aAAa,CAACM,EAAzB;AACA,YAAMC,MAAM,GAAGP,aAAa,CAACO,MAA7B;AACAC,MAAAA,QAAQ,CAAClB,cAAc,CAACgB,EAAD,EAAKC,MAAL,CAAf,CAAR;AACD;AACF,GAxBD;;AA0BA,sBACE;AAAM,IAAA,QAAQ,EAAEb,YAAhB;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,OAAO,EAAE;AACPe,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AACJC,YAAAA,QAAQ,EAAE,MADN;AAEJC,YAAAA,KAAK,EAAE,SAFH;AAGJ,6BAAiB;AACfA,cAAAA,KAAK,EAAE;AADQ;AAHb,WADD;AAQLC,UAAAA,OAAO,EAAE;AACPD,YAAAA,KAAK,EAAE;AADA;AARJ;AADA;AADX;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,CAACpB,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CArDD;;GAAMD,Y;UACWH,S,EACEC,W;;;KAFbE,Y;AAuDN,eAAeA,YAAf","sourcesContent":["import { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { payOrderStripe } from '../actions/orderActions';\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // Use your card Element with other Stripe.js APIs\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: cardElement,\r\n    });\r\n\r\n    if (error) {\r\n      console.log('[error]', error);\r\n    } else {\r\n      console.log('[PaymentMethod]', paymentMethod);\r\n      console.log(paymentMethod.id);\r\n      const id = paymentMethod.id;\r\n      const amount = paymentMethod.amount;\r\n      dispatch(payOrderStripe(id, amount));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <CardElement\r\n        options={{\r\n          style: {\r\n            base: {\r\n              fontSize: '16px',\r\n              color: '#424770',\r\n              '::placeholder': {\r\n                color: '#aab7c4',\r\n              },\r\n            },\r\n            invalid: {\r\n              color: '#9e2146',\r\n            },\r\n          },\r\n        }}\r\n      />\r\n      <button type=\"submit\" disabled={!stripe}>\r\n        Pay\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n"]},"metadata":{},"sourceType":"module"}