{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducer, productListReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer, productUpdateCountInStockReducer } from './reducers/productReducers';\nimport { cartReducer, userCartReducer, userAddCartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer, userSendTokenReducer, userVerifyTokenReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productUpdateCountInStock: productUpdateCountInStockReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userSendToken: userSendTokenReducer,\n  userVerifyToken: userVerifyTokenReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMyList: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  userAddCart: userAddCartReducer,\n  userCart: userCartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/m19ss/Desktop/webDev/REACT/MERN_E_COMMERCE/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducer","productListReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","productUpdateCountInStockReducer","cartReducer","userCartReducer","userAddCartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","userSendTokenReducer","userVerifyTokenReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productUpdateCountInStock","cart","userLogin","userRegister","userSendToken","userVerifyToken","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderMyList","orderList","orderDeliver","productReviewCreate","productTopRated","userAddCart","userCart","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"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","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  productDetailsReducer,\r\n  productListReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n  productUpdateCountInStockReducer,\r\n} from './reducers/productReducers';\r\nimport {\r\n  cartReducer,\r\n  userCartReducer,\r\n  userAddCartReducer,\r\n} from './reducers/cartReducers';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n  userSendTokenReducer,\r\n  userVerifyTokenReducer,\r\n} from './reducers/userReducers';\r\n\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productUpdateCountInStock: productUpdateCountInStockReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userSendToken: userSendTokenReducer,\r\n  userVerifyToken: userVerifyTokenReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderMyList: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  userAddCart: userAddCartReducer,\r\n  userCart: userCartReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : [];\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}