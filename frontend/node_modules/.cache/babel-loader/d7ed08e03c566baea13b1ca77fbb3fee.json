{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m19ss\\\\Desktop\\\\webDev\\\\REACT\\\\MERN_E_COMMERCE\\\\frontend\\\\src\\\\screens\\\\TokenAuthScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { verifyToken } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TokenAuthScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [token, setToken] = useState('');\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    userInfo,\n    error\n  } = userRegister;\n  const userVerifyToken = useSelector(state => state.userVerifyToken);\n  const {\n    loading: tokenLoading,\n    success,\n    error: tokenError\n  } = userVerifyToken;\n  useEffect(() => {\n    if (!tokenLoading && success) {\n      history.push('/');\n    }\n  }, [history, tokenLoading, redirect, dispatch]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(verifyToken(userInfo, token));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: [error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), loading || tokenLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Authenticate Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"token\",\n            placeholder: \"Token\",\n            value: token,\n            onChange: e => setToken(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Verify Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"get Token Again ?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: redirect ? `/register?redirect=${redirect}` : '/register',\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TokenAuthScreen, \"VaEKoO4dC0nZAN5C09dyGCbKt3c=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = TokenAuthScreen;\nexport default TokenAuthScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenAuthScreen\");","map":{"version":3,"sources":["C:/Users/m19ss/Desktop/webDev/REACT/MERN_E_COMMERCE/frontend/src/screens/TokenAuthScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","FormContainer","verifyToken","TokenAuthScreen","location","history","token","setToken","redirect","search","split","dispatch","userRegister","state","loading","userInfo","error","userVerifyToken","tokenLoading","success","tokenError","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { verifyToken } from '../actions/userActions';\r\n\r\nconst TokenAuthScreen = ({ location, history }) => {\r\n  const [token, setToken] = useState('');\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, userInfo, error } = userRegister;\r\n\r\n  const userVerifyToken = useSelector((state) => state.userVerifyToken);\r\n  const { loading: tokenLoading, success, error: tokenError } = userVerifyToken;\r\n\r\n  useEffect(() => {\r\n    if (!tokenLoading && success) {\r\n      history.push('/');\r\n    }\r\n  }, [history, tokenLoading, redirect, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(verifyToken(userInfo, token));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <Message variant=\"danger\">{error} </Message>}\r\n      {loading || tokenLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <FormContainer>\r\n          <h1>Authenticate Token</h1>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Token</Form.Label>\r\n              <Form.Control\r\n                type=\"token\"\r\n                placeholder=\"Token\"\r\n                value={token}\r\n                onChange={(e) => setToken(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Verify Token\r\n            </Button>\r\n          </Form>\r\n          <Row className=\"py-3\">\r\n            <Col>\r\n              get Token Again ?{' '}\r\n              <Link\r\n                to={redirect ? `/register?redirect=${redirect}` : '/register'}\r\n              >\r\n                Register\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </FormContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TokenAuthScreen;\r\n"]},"metadata":{},"sourceType":"module"}